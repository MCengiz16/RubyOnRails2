<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="csrf-token" content="<%= form_authenticity_token %>">
  <title>Cengiz - Welcome</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f4f4f4;
    }
    .header {
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 1rem;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    .hero-section {
      text-align: center;
      padding: 4rem 0;
    }
    .hero-section h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
    }
    .hero-section p {
      font-size: 1.2rem;
      color: #555;
    }
    .cta-button {
      display: inline-block;
      background-color: #333;
      color: #fff;
      padding: 1rem 2rem;
      text-decoration: none;
      border-radius: 4px;
      margin-top: 1rem;
    }
    .user-section {
      text-align: center;
      margin-top: 3rem;
    }
    #refresh-button {
      background-color: #333;
      color: #fff;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    #user-list {
      list-style: none;
      padding: 0;
      margin-top: 1rem;
    }
    #user-list li {
      margin: 0.5rem 0;
      font-size: 1.2rem;
    }
    .hero-section {
      text-align: center;
      padding: 4rem 0;
    }
    .hero-section h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
    }
    .hero-section p {
      font-size: 1.2rem;
      color: #555;
    }
    .cta-button {
      display: inline-block;
      background-color: #333;
      color: #fff;
      padding: 1rem 2rem;
      text-decoration: none;
      border-radius: 4px;
      margin-top: 1rem;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }
    th {
      background-color: #f2f2f2;
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>Welcome to The Cengiz Ruby On Rails App V2</h1>
    <p>Your Destination for Something Awesome</p>
  </div>
  <div class="container">
    <div class="hero-section">
      <h1>Learn Ruby</h1>
      <a href="#" class="cta-button">Get Started</a>
    </div>
    <p>By using this app, you agree to my <%= link_to 'Privacy Policy', 'privacy_policy' %>.</p>
  </div>

  <%# Add users %>
  <div class="container">
    <form id="user-form">
      <label for="name">First Name:</label>
      <input type="text" id="name" name="user[name]" required><br><br>
      <label for="last_name">Last Name:</label>
      <input type="text" id="last_name" name="user[last_name]" required><br><br>
      <input type="submit" value="Add User">
    </form>
       <div id="success-message" style="display: none; color: green;">User created successfully!</div>
  </div>

<%# Display Users %>
  <div class="container">
    <div class="hero-section">
      <h1>Users</h1>
      <button id="refresh-button">Refresh User List</button> 
      <button id="delete-all-button">Delete All Users</button>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Last Name</th>
            <th>Created At</th>
            <th>Updated At</th>
          </tr>
        </thead>
        <tbody id="user-list"></tbody>
      </table>
    </div>
  </div>

<%# Add users %>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const userForm = document.getElementById('user-form');
    const successMessage = document.getElementById('success-message');

      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

      userForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(userForm);
        const response = await fetch('/api/users', {
          method: 'POST',
          headers: {
            'X-CSRF-Token': csrfToken,
          },
          body: formData,
        });

        if (response.ok) {
          const user = await response.json();
          let name = `Name: ${user.name} ${user.last_name}`;
          userForm.reset();
          // Display success message for 3 seconds
        successMessage.style.display = 'block';
        setTimeout(() => {
          successMessage.style.display = 'none';
        }, 3000);

        } else {
          console.error('Failed to create user');
        }
      });
    });
  </script>

<%# list users %>
   <script>
    document.addEventListener('DOMContentLoaded', () => {
      const userList = document.getElementById('user-list');
      const refreshButton = document.getElementById('refresh-button');

      const getUsers = async () => {
        const response = await fetch('/api/users');
        if (response.ok) {
          const users = await response.json();
          userList.innerHTML = ''; // Clear existing data
          users.forEach(user => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${user.id}</td>
              <td>${user.name}</td>
              <td>${user.last_name}</td>
              <td>${user.created_at}</td>
              <td>${user.updated_at}</td>
            `;
            userList.appendChild(row);
          });
        } else {
          console.error('Failed to fetch users');
        }
      };

      refreshButton.addEventListener('click', () => {
        getUsers();
      });

      getUsers();
    });

    
  </script>


  <%#  Delete All %>
     <script>
      document.addEventListener('DOMContentLoaded', () => {
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
  const deleteAllButton = document.getElementById('delete-all-button');
  const successMessage = document.getElementById('success-message');

  deleteAllButton.addEventListener('click', async () => {  
    const response = await fetch('/api/users', {
      method: 'DELETE',
      headers: {
        'X-CSRF-Token': csrfToken,
      },
    });

    if (response.ok) {
      // Display success message for 3 seconds
      successMessage.style.display = 'block';
      setTimeout(() => {
        successMessage.style.display = 'none';
      }, 3000);
    } else {
      console.error('Failed to delete users');
    }
  });

  });

    
  </script>



 
</body>
</html>
